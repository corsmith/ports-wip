--- ./modules/generators/mod_suexec.c.orig	2011-12-04 19:08:01.000000000 -0500
+++ ./modules/generators/mod_suexec.c	2012-09-13 20:50:50.201519988 -0400
@@ -56,10 +56,11 @@
 }
 
 static const char *set_suexec_ugid(cmd_parms *cmd, void *mconfig,
-                                   const char *uid, const char *gid)
+                                   const char *uid, const char *gid,
+                                   int userdir)
 {
     suexec_config_t *cfg = (suexec_config_t *) mconfig;
-    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIR_LOC_FILE);
+    const char *err = ap_check_cmd_context(cmd, NOT_IN_LOCATION|NOT_IN_FILES);
 
     if (err != NULL) {
         return err;
@@ -73,12 +74,24 @@
 
     cfg->ugid.uid = ap_uname2id(uid);
     cfg->ugid.gid = ap_gname2id(gid);
-    cfg->ugid.userdir = 0;
+    cfg->ugid.userdir = userdir;
     cfg->active = 1;
 
     return NULL;
 }
 
+static const char *set_suexec_ugid_nouserdir(cmd_parms *cmd, void *mconfig,
+                                             const char *uid, const char *gid)
+{
+    return set_suexec_ugid(cmd, mconfig, uid, gid, 0);
+}
+
+static const char *set_suexec_ugid_userdir(cmd_parms *cmd, void *mconfig,
+                                           const char *uid, const char *gid)
+{
+    return set_suexec_ugid(cmd, mconfig, uid, gid, 1);
+}
+
 static ap_unix_identity_t *get_suexec_id_doer(const request_rec *r)
 {
     suexec_config_t *cfg =
@@ -116,7 +129,9 @@
 {
     /* XXX - Another important reason not to allow this in .htaccess is that
      * the ap_[ug]name2id() is not thread-safe */
-    AP_INIT_TAKE2("SuexecUserGroup", set_suexec_ugid, NULL, RSRC_CONF,
+    AP_INIT_TAKE2("SuexecUserGroup", set_suexec_ugid_nouserdir, NULL, RSRC_CONF|ACCESS_CONF,
+      "User and group for spawned processes"),
+    AP_INIT_TAKE2("SuexecUserdir", set_suexec_ugid_userdir, NULL, RSRC_CONF|ACCESS_CONF,
       "User and group for spawned processes"),
     { NULL }
 };
